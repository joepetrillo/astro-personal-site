---
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import RootLayout from "../../layouts/RootLayout.astro";
import Banner from "../../components/Banner.astro";
import { BLOG_DESCRIPTION, BLOG_TITLE } from "../../consts";

const postsCollection = await getCollection("blog");
const posts = await Promise.all(
  postsCollection
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
    .map(async (post) => {
      const { remarkPluginFrontmatter } = await post.render();
      return {
        ...post,
        data: {
          ...post.data,
          readingTime: remarkPluginFrontmatter.minutesRead as string,
        },
      };
    }),
);
---

<RootLayout title={BLOG_TITLE} description={BLOG_DESCRIPTION}>
  <Banner text="Blog" slot="banner" bg="bg-wavy-pattern" />
  <p class="mt-10">{BLOG_DESCRIPTION}</p>
  <ul class="mb-20 mt-6 space-y-4 divide-y divide-zinc-100">
    {
      posts.map((post) => (
        <li class="pt-4">
          <h4 class="mb-2 text-lg font-medium">
            <a href={`/blog/${post.slug}`} class="break-words hover:underline">
              {post.data.title}
            </a>
          </h4>
          <div class="xs:flex-row flex flex-col justify-between font-mono text-sm text-zinc-500">
            <span class="self-start bg-zinc-50 p-0.5 text-zinc-500">
              <FormattedDate date={post.data.pubDate} />
            </span>
            <p class="self-start bg-zinc-50 p-0.5">{post.data.readingTime}</p>
          </div>
        </li>
      ))
    }
  </ul>
</RootLayout>
